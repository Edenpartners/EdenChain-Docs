====================================================
Install SDK & Development for Python
====================================================

.. container::
   :name: page

   .. container:: aui-page-panel
      :name: main

      .. container::
         :name: main-header

         .. container::
            :name: breadcrumb-section

            #. `Eden Platform <index.html>`__
            #. `EdenChain Doc <EdenChain-Doc_120848728.html>`__
            #. `SDK_Docs <SDK_Docs_124813380.html>`__
            #. `Python <Python_122848141.html>`__

         .. rubric:: Install SDK & Development for
            Python
            :name: title-heading
            :class: pagetitle

      .. container:: view
         :name: content

         .. container:: page-metadata

            Created by Jacki Heo, last modified on Mar 26, 2019

         .. container:: wiki-content group
            :name: main-content

            #. .. rubric:: 개발 환경
                  :name: InstallSDK&DevelopmentforPython-개발환경

            Linux/Windows/Mac OS 

            python3용으로만 개발되어 있다.

            | 

            .. rubric:: 2. 설치
               :name: InstallSDK&DevelopmentforPython-2.설치

            프로젝트 디렉토리에서 아래와 같이 수행한다.

            | 

            ::

               pip install  eden_client_api

            | 
            | 오류가 없을 경우 관련 library까지 같이 설치가 완료된다.

            .. rubric:: 3. 제공 API
               :name: InstallSDK&DevelopmentforPython-3.제공API

            아래 모든 API는 EdenClientApi() class의 method이다.

            | 

            -  .. rubric:: 네트워크 설정 
                  :name: InstallSDK&DevelopmentforPython-네트워크설정

            SDK를 통해 접속할 에덴체인의 네트워크를 설정한다. 현재 3개의
            네트워크가 있으며 테스트할 네트워크를 설정하게 되는데 SDK를
            사용할 때 언제나 제일 먼저 초기화 해야 하는 작업이다.

            | 

            .. rubric:: (1)  네트워크 상수
               :name: InstallSDK&DevelopmentforPython-(1)네트워크상수

            ::

               EDEN_MAINNET_NETWORK      : EdenChain MainNet General Release 
               EDEN_CANDIDATE_NETWORK    : EdenChain Candidate Release
               EDEN_BETA_NETWORK         : EdenChain Beta Release

            | 

            .. rubric:: (2) 네트워크 설정 
               :name: InstallSDK&DevelopmentforPython-(2)네트워크설정

            API Class 초기화할 때 사용되며, 이 후 모든 API는 해당
            class를 이용하여 호출된다.

            | 

               EdenClientApi(network_id)

            ::

               parameter  :
                            network_id는 위 네트워크 상수를 넣는다.

               return     :
                            Python class가 생성된다. 이 instance를 사용하여 API를 호출한다.

            -  .. rubric:: Authentication
                  :name: InstallSDK&DevelopmentforPython-Authentication

            Edenchain으로의 Sign in만을 지원한다. Sign In은 기 생성된
            계정으로의 Sign  In을 제공한다.

            | 

               authenticate_user( email, password)

            ::

               parameter  :
                            email    (String) :  앞으로 사용할 계정으로 사용할 email주소이다.
                            password (String) : 앞으로 사용할 계정의 암호이다.

               return     :
                            token   (String)  :  API호출에 사용될 사용자의 인증 token을 리턴한다.

            | 

            -  .. rubric:: Synchronous apis
                  :name: InstallSDK&DevelopmentforPython-Synchronousapis

            각 api는 async버전과 기본 sync버전이 있으며, async의 경우는
            함수 이름 뒤에 \_async가 붙어있는 형태로 되어 있다.

            | 

               get_user_info(token='')

            에덴체인 상의 사용자 정보를 리턴한다.  dictionary형태로
            리턴하며  token address 또는 token deposit, withdraw에
            사용될 ethereum 주소 정보 등을 리턴한다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.

               return:
                            {}                    : Dictionary를 리턴하며, 다음 정보를 가진다.

                                                  email  ( String ) :  사용자 email주소

                                                  eth_address (String ) : api에 의해 추가/삭제된 사용자 ethereum주소이며, '|'로 Delimiter로 하여 여러 주소가 들어 있을 수 있다. 

                                                                          api중 withdraw나 deposit은 등록되지 않은 주소로의 withdraw나 deposit은 거부한다.
                                                  tedn_public_key (String )  에덴체인 사용자 Wallet 주소

            | 

            | 

               get_user_balance(token='')

            에덴체인의 사용자 계정 Balance를 리턴한다.

            | 

            ::

               parameter  :
                           token    ( String ) :  Authentication시 얻어지는 token 값이다.

               return: 
                           int                 : decimal 18인 Token balance이다

            | 

               get_user_transaction(token='', page = 0, countperpage =
               0)

            사용자의 Transaction List를 얻는 API이다. iamtoken에
            해당하는 사용자의 Transaction에서 정보를 리턴한다.

            | 

            ::

               parameter  :
                           token      ( String ) :  Authentication시 얻어지는 token 값이다.
                           page  (int)           : 몇번 째 페이지의 transaction을 리턴하는지 지정한다.
                           countperpage (int)    : 각 페이지의 transaction count를 지정해서 , page를 지정하게 되면 몇번째 transaction이 몇개 리턴되는지 지정하게 된다.

               return:
                           [{}]                  :   Object의 리스트를 리턴하며, 각 오브젝트는 딕셔너리 형태로 다음 정보를 가진다.
                                                  from_addr  (String):  amount가 빠져나가는 에덴체인 상의 주소
                                                  to_addr       (String) : amount가 들어가는 에덴체인 상의 주소
                                                  amount     (int )       :  tx에 해당하는 token amount이며, decimal 18이다.
                                                  regdate    (int)         : tx가 수행된 시간이며, 초단위이다.

            ..

               get_coin_server_address(token='')

            CoinServer Ethereum Address를 리턴한다. Beta Release와
            Candidate Release까지는 Ropsten Ethereum Testnet의 주소를
            리턴하며, General Release시에는 Ethereum MainNet상의 주소를
            리턴한다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.

               return:
                            String            : Coin Server의 Ethereum 주소를 리턴한다.

            | 

               add_eth_address(token='', private_key='')

            사용자 계정에 ethereum 주소를 넣는데 사용된다. 남의
            address의 도용을 방지하기 위해서 address를 sign하여 보내게
            되어 있으며, sign이 맞을 경우에만 서버에서 처리한다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.
                            private_key (String)  : Etheruem Private Key이며, 해당 key를 사용하여 아래 address object를 생성하여 서버쪽에 전달한다.
                                                    다음은 address Object이다. 
                                                    address  (String) : Ethereum Checksum Address
                                                    public_key (String) : Ethereum public Key.이며, signature를 verify할 때 사용한다.
                                                    signature ( String ) : address를 keccak256 해시 후 이를 ethereum private key로 sign한 값이다.

               return    :
                             Boolean   : Ethereum 주소 추가의 성공, 실패여부를 나타낸다.

            | 

               del_eth_address( token='', private_key='')

            사용자 계정에 ethereum 주소를 넣는데 사용된다. 남의
            address의 도용을 방지하기 위해서 address를 sign하여 보내게
            되어 있으며, sign이 맞을 경우에만 서버에서 처리한다.

            | 

            ::

               parameter  :
                           token      ( String ) :  Authentication시 얻어지는 token 값이다.
                           private_key (String)  : Etheruem Private Key이며, 해당 key를 사용하여 아래 address object를 생성하여 서버쪽에 전달한다.
                                                   다음은 address Object이다. 
                                                   address  (String) : Ethereum Checksum Address
                                                   public_key (String) : Ethereum public Key.이며, signature를 verify할 때 사용한다.
                                                   signature ( String ) : address를 keccak256 해시 후 이를 ethereum private key로 sign한 값이다.

               return    :
                          Boolean   : Ethereum 주소 삭제의 성공, 실패여부를 나타낸다.

            | 

               deposit_token(token='', txhash='')

            Ethereum의 ERC20 EDN Token을 에덴체인 서비스를 위해 넘기는
            경우 호출되는 API이다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.
                            txhash          (String)   : Ethereum transfer후의 transaction hash값

               return     :
                             Boolean   : API의 성공, 실패여부를 나타낸다.

            | 

               withdraw_token(token='', ethaddress='',amount=0)

            에덴체인 서비스의 token을 Ethereum의 ERC20 EDN Token으로
            넘기는 경우 호출되는 API이다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.
                            ethaddress   (String ) :  받고자 하는 ethereum상의 주소이며, 이는 미리 addEthAddress()에 의해 등록되어 있어야 한다.
                            amount        (int)        : 받고자 하는 양이며, decimal 18이다.

               return     :
                            txhash  (String): Coin Server에서 Ethereum Transfer후 발생된 txhash값. 해당 값을 사용하여 withdraw가 성공했는지 알 수 있다.

            | 

            -  .. rubric:: Asynchronous apis
                  :name: InstallSDK&DevelopmentforPython-Asynchronousapis

            각 api는 async버전과 기본 sync버전이 있으며, async의 경우는
            함수 이름 뒤에 \_async가 붙어있는 형태로 되어 있다.

            | 

               get_user_info_async(token='')

            에덴체인 상의 사용자 정보를 리턴한다.  dictionary형태로
            리턴하며  token address 또는 token deposit, withdraw에
            사용될 ethereum 주소 정보 등을 리턴한다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.

               return:
                            {}                    : Dictionary를 리턴하며, 다음 정보를 가진다.

                                                  email  ( String ) :  사용자 email주소

                                                  eth_address (String ) : api에 의해 추가/삭제된 사용자 ethereum주소이며, '|'로 Delimiter로 하여 여러 주소가 들어 있을 수 있다. 

                                                                          api중 withdraw나 deposit은 등록되지 않은 주소로의 withdraw나 deposit은 거부한다.
                                                  tedn_public_key (String )  에덴체인 사용자 Wallet 주소

            | 

            | 

               get_user_balance_async(token='')

            에덴체인의 사용자 계정 Balance를 리턴한다.

            | 

            ::

               parameter  :
                           token    ( String ) :  Authentication시 얻어지는 token 값이다.

               return: 
                           int                 : decimal 18인 Token balance이다

            | 

               get_user_transaction_async(token='', page = 0,
               countperpage = 0)

            사용자의 Transaction List를 얻는 API이다. iamtoken에
            해당하는 사용자의 Transaction에서 정보를 리턴한다.

            | 

            ::

               parameter  :
                           token      ( String ) :  Authentication시 얻어지는 token 값이다.
                           page  (int)           : 몇번 째 페이지의 transaction을 리턴하는지 지정한다.
                           countperpage (int)    : 각 페이지의 transaction count를 지정해서 , page를 지정하게 되면 몇번째 transaction이 몇개 리턴되는지 지정하게 된다.

               return:
                           [{}]                  :   Object의 리스트를 리턴하며, 각 오브젝트는 딕셔너리 형태로 다음 정보를 가진다.
                                                  from_addr  (String):  amount가 빠져나가는 에덴체인 상의 주소
                                                  to_addr       (String) : amount가 들어가는 에덴체인 상의 주소
                                                  amount     (int )       :  tx에 해당하는 token amount이며, decimal 18이다.
                                                  regdate    (int)         : tx가 수행된 시간이며, 초단위이다.

            ..

               get_coin_server_address_async(token='')

            CoinServer Ethereum Address를 리턴한다. Beta Release와
            Candidate Release까지는 Ropsten Ethereum Testnet의 주소를
            리턴하며, General Release시에는 Ethereum MainNet상의 주소를
            리턴한다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.

               return:
                            String            : Coin Server의 Ethereum 주소를 리턴한다.

            | 

               add_eth_address_async(token='', private_key='')

            사용자 계정에 ethereum 주소를 넣는데 사용된다. 남의
            address의 도용을 방지하기 위해서 address를 sign하여 보내게
            되어 있으며, sign이 맞을 경우에만 서버에서 처리한다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.
                            private_key (String)  : Etheruem Private Key이며, 해당 key를 사용하여 아래 address object를 생성하여 서버쪽에 전달한다.
                                                    다음은 address Object이다. 
                                                    address  (String) : Ethereum Checksum Address
                                                    public_key (String) : Ethereum public Key.이며, signature를 verify할 때 사용한다.
                                                    signature ( String ) : address를 keccak256 해시 후 이를 ethereum private key로 sign한 값이다.

               return    :
                             Boolean   : Ethereum 주소 추가의 성공, 실패여부를 나타낸다.

            | 

               del_eth_address_async( token='', private_key='')

            사용자 계정에 ethereum 주소를 넣는데 사용된다. 남의
            address의 도용을 방지하기 위해서 address를 sign하여 보내게
            되어 있으며, sign이 맞을 경우에만 서버에서 처리한다.

            | 

            ::

               parameter  :
                           token      ( String ) :  Authentication시 얻어지는 token 값이다.
                           private_key (String)  : Etheruem Private Key이며, 해당 key를 사용하여 아래 address object를 생성하여 서버쪽에 전달한다.
                                                   다음은 address Object이다. 
                                                   address  (String) : Ethereum Checksum Address
                                                   public_key (String) : Ethereum public Key.이며, signature를 verify할 때 사용한다.
                                                   signature ( String ) : address를 keccak256 해시 후 이를 ethereum private key로 sign한 값이다.

               return    :
                          Boolean   : Ethereum 주소 삭제의 성공, 실패여부를 나타낸다.

            | 

               deposit_token_async(token='', txhash='')

            Ethereum의 ERC20 EDN Token을 에덴체인 서비스를 위해 넘기는
            경우 호출되는 API이다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.
                            txhash          (String)   : Ethereum transfer후의 transaction hash값

               return     :
                             Boolean   : API의 성공, 실패여부를 나타낸다.

            | 

               withdraw_token_async(token='', ethaddress='',amount=0)

            에덴체인 서비스의 token을 Ethereum의 ERC20 EDN Token으로
            넘기는 경우 호출되는 API이다.

            | 

            ::

               parameter  :
                            token      ( String ) :  Authentication시 얻어지는 token 값이다.
                            ethaddress   (String ) :  받고자 하는 ethereum상의 주소이며, 이는 미리 addEthAddress()에 의해 등록되어 있어야 한다.
                            amount        (int)        : 받고자 하는 양이며, decimal 18이다.

               return     :
                            txhash  (String): Coin Server에서 Ethereum Transfer후 발생된 txhash값. 해당 값을 사용하여 withdraw가 성공했는지 알 수 있다.

            | 

   .. container::
      :name: footer

      .. container:: section footer-body

         Document generated by Confluence on Mar 27, 2019 18:14

         .. container::
            :name: footer-logo

            `Atlassian <http://www.atlassian.com/>`__

