
EdenChain Introduction
======================================

.. container::
   :name: page

   .. container:: aui-page-panel
      :name: main

      .. container::
         :name: main-header

         .. container::
            :name: breadcrumb-section

            #. `Eden Platform <index.html>`__
            #. `EdenChain Doc <EdenChain-Doc_120848728.html>`__

         .. rubric:: EdenChain Introduction
            :name: title-heading
            :class: pagetitle

      .. container:: view
         :name: content

         .. container:: page-metadata

            Created by James Ahn, last modified by Hailee Kim on Mar 26,
            2019

         .. container:: wiki-content group
            :name: main-content

            .. rubric:: Overview
               :name: EdenChainIntroduction-Overview

            Eden is a blockchain-based programmable economy platform
            that provides high-performance processing speeds which
            address the aforementioned technical issues. Eden has the
            capacity to develop a variety of automated services using
            smart contracts, enabling interoperability with external
            systems. The core technologies implementing programmable
            economy smart contracts, have a greater technological and
            economic value than non-deterministic smart contracts that
            require off-chain integration rather than deterministic
            smart contracts that are operated only on-chain.

            Conventional blockchain technologies such as Bitcoin and
            Ethereum are unsafe because they are exposed to hacker
            attacks. This is due to the lack of guaranteed trust in
            interacting with external systems that are normally required
            for non-deterministic smart contracts. Eden uses the
            E-Bridge layer to retrieve data from multiple data sources
            when a non-deterministic smart contract is interfaced with
            an external system. Eden encrypts this data and incorporates
            the Median Voter Theorem (MVT) to secure trust and to defend
            against attacks from hackers.

            Performance is a vital technical issue that is essential to
            the implementation of smart contracts. Eden combines
            namespaces with Merkle Tree, isolates transactions based on
            its particular namespace, and secures performance and
            scalability by constructing an execution system capable of
            parallel processing by namespace. This enables the ability
            to carry out a vast number of transactions simultaneously in
            parallel.

            Eden supports Solidity, the most popular smart contract
            language at this time, as well as Dyerium's EVM since smart
            contracts are heavily used for sensitive services such as
            payment and settlement. Stable and reliable smart contract
            programming languages are more important than the creation
            of an unnecessary new type of programming language.Â  The
            emergence of a new type of language that requires a long
            time to be validated through constant testing and can be
            exposed to serious security vulnerabilities during this
            validation period. Eden constructs a blockchain using EVM
            and Solidity, which are verified and continually improved by
            the community.

            Since Eden guarantees secured connectivity, one can fully
            realize a programmable economy by trading various
            blockchain-based assets on the Internet. Tokenization of any
            type of asset can publicly prove ownership of the asset and
            the owner of a particular asset can take part in both P2P
            transactions and transactions on exchanges.


   .. container::
      :name: footer

      .. container:: section footer-body

         Document generated by Confluence on Mar 28, 2019 12:30

         .. container::
            :name: footer-logo

            `Atlassian <http://www.atlassian.com/>`__

.. |image0| image:: images/icons/bullet_blue.gif
   :width: 8px
   :height: 8px
.. |image1| image:: images/icons/bullet_blue.gif
   :width: 8px
   :height: 8px
.. |image2| image:: images/icons/bullet_blue.gif
   :width: 8px
   :height: 8px
.. |image3| image:: images/icons/bullet_blue.gif
   :width: 8px
   :height: 8px
.. |image4| image:: images/icons/bullet_blue.gif
   :width: 8px
   :height: 8px

